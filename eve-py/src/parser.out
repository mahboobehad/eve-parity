Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    GUARD

Grammar

Rule 0     S' -> input
Rule 1     input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
Rule 2     input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y
Rule 3     input -> input input
Rule 4     input -> input PROPF prop_form
Rule 5     input -> input PAYOFFS payoff_list
Rule 6     payoff_list -> payoff_tuple
Rule 7     payoff_list -> payoff_list payoff_tuple
Rule 8     payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON
Rule 9     payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON
Rule 10    var_y -> NAME
Rule 11    var_y -> var_y COMMA var_y
Rule 12    init_y -> DCOL init_command
Rule 13    init_y -> init_y DCOL init_command
Rule 14    init_command -> init_condition ASSIGN init_next_state
Rule 15    init_condition -> TRUE
Rule 16    init_next_state -> NAME NEXT EQUALS TRUE
Rule 17    init_next_state -> NAME NEXT EQUALS FALSE
Rule 18    init_next_state -> init_next_state COMMA init_next_state
Rule 19    init_next_state -> init_next_state SEMICOLON
Rule 20    update_command -> update_condition ASSIGN update_next_state
Rule 21    update_y -> DCOL update_command
Rule 22    update_y -> update_y DCOL update_command
Rule 23    update_condition -> formula_guard
Rule 24    update_condition -> update_condition COMMA update_condition
Rule 25    formula_guard -> NAME
Rule 26    formula_guard -> TRUE
Rule 27    formula_guard -> FALSE
Rule 28    formula_guard -> formula_guard OR formula_guard
Rule 29    formula_guard -> formula_guard AND formula_guard
Rule 30    formula_guard -> formula_guard IMPLIES formula_guard
Rule 31    formula_guard -> formula_guard IFF formula_guard
Rule 32    formula_guard -> NOT formula_guard
Rule 33    formula_guard -> LB formula_guard RB
Rule 34    update_next_state -> NAME NEXT EQUALS formula_assign
Rule 35    update_next_state -> update_next_state COMMA update_next_state
Rule 36    update_next_state -> update_next_state SEMICOLON
Rule 37    formula_assign -> NAME
Rule 38    formula_assign -> TRUE
Rule 39    formula_assign -> FALSE
Rule 40    formula_assign -> formula_assign OR formula_assign
Rule 41    formula_assign -> formula_assign AND formula_assign
Rule 42    formula_assign -> formula_assign IMPLIES formula_assign
Rule 43    formula_assign -> formula_assign IFF formula_assign
Rule 44    formula_assign -> NOT formula_assign
Rule 45    formula_assign -> LB formula_assign RB
Rule 46    goal_form -> DCOL gf SEMICOLON
Rule 47    gf -> NAME
Rule 48    gf -> TRUE
Rule 49    gf -> FALSE
Rule 50    gf -> gf OR gf
Rule 51    gf -> gf AND gf
Rule 52    gf -> gf IMPLIES gf
Rule 53    gf -> gf IFF gf
Rule 54    gf -> G gf
Rule 55    gf -> F gf
Rule 56    gf -> X gf
Rule 57    gf -> gf U gf
Rule 58    gf -> NOT gf
Rule 59    gf -> LB gf RB
Rule 60    prop_form -> DCOL pf SEMICOLON
Rule 61    pf -> NAME
Rule 62    pf -> TRUE
Rule 63    pf -> FALSE
Rule 64    pf -> pf OR pf
Rule 65    pf -> pf AND pf
Rule 66    pf -> pf IMPLIES pf
Rule 67    pf -> pf IFF pf
Rule 68    pf -> G pf
Rule 69    pf -> F pf
Rule 70    pf -> X pf
Rule 71    pf -> pf U pf
Rule 72    pf -> NOT pf
Rule 73    pf -> LB pf RB

Terminals, with rules where they appear

AND                  : 29 41 51 65
ASSIGN               : 14 20
COMMA                : 8 8 9 9 11 18 24 35
COMMENT              : 
CONTROL              : 1 2
DCOL                 : 8 9 12 13 21 22 46 60
ENVIRONMENT          : 2
EQUALS               : 16 17 34
F                    : 55 69
FALSE                : 17 27 39 49 63
G                    : 54 68
GOAL                 : 1
GUARD                : 
IFF                  : 31 43 53 67
IMPLIES              : 30 42 52 66
INIT                 : 1 2
LB                   : 8 9 33 45 59 73
MODULE               : 1 2
NAME                 : 1 8 8 9 10 16 17 25 34 37 47 61
NEXT                 : 16 17 34
NOT                  : 32 44 58 72
NUMBER               : 8 9
OR                   : 28 40 50 64
PAYOFFS              : 5
PROPF                : 4
RB                   : 8 9 33 45 59 73
SEMICOLON            : 8 9 19 36 46 60
TRUE                 : 15 16 26 38 48 62
U                    : 57 71
UPDATE               : 1 2
X                    : 56 70
error                : 9

Nonterminals, with rules where they appear

formula_assign       : 34 40 40 41 41 42 42 43 43 44 45
formula_guard        : 23 28 28 29 29 30 30 31 31 32 33
gf                   : 46 50 50 51 51 52 52 53 53 54 55 56 57 57 58 59
goal_form            : 1
init_command         : 12 13
init_condition       : 14
init_next_state      : 14 18 18 19
init_y               : 1 2 13
input                : 3 3 4 5 0
payoff_list          : 5 7
payoff_tuple         : 6 7
pf                   : 60 64 64 65 65 66 66 67 67 68 69 70 71 71 72 73
prop_form            : 4
update_command       : 21 22
update_condition     : 20 24 24
update_next_state    : 20 35 35 36
update_y             : 1 2 22
var_y                : 1 2 11 11

Parsing method: LALR

state 0

    (0) S' -> . input
    (1) input -> . MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    (2) input -> . MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y
    (3) input -> . input input
    (4) input -> . input PROPF prop_form
    (5) input -> . input PAYOFFS payoff_list

    MODULE          shift and go to state 2

    input                          shift and go to state 1

state 1

    (0) S' -> input .
    (3) input -> input . input
    (4) input -> input . PROPF prop_form
    (5) input -> input . PAYOFFS payoff_list
    (1) input -> . MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    (2) input -> . MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y
    (3) input -> . input input
    (4) input -> . input PROPF prop_form
    (5) input -> . input PAYOFFS payoff_list

    PROPF           shift and go to state 4
    PAYOFFS         shift and go to state 5
    MODULE          shift and go to state 2

    input                          shift and go to state 3

state 2

    (1) input -> MODULE . NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    (2) input -> MODULE . ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y

    NAME            shift and go to state 6
    ENVIRONMENT     shift and go to state 7


state 3

    (3) input -> input input .
    (3) input -> input . input
    (4) input -> input . PROPF prop_form
    (5) input -> input . PAYOFFS payoff_list
    (1) input -> . MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    (2) input -> . MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y
    (3) input -> . input input
    (4) input -> . input PROPF prop_form
    (5) input -> . input PAYOFFS payoff_list

  ! shift/reduce conflict for PROPF resolved as shift
  ! shift/reduce conflict for PAYOFFS resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    $end            reduce using rule 3 (input -> input input .)
    PROPF           shift and go to state 4
    PAYOFFS         shift and go to state 5
    MODULE          shift and go to state 2

  ! PROPF           [ reduce using rule 3 (input -> input input .) ]
  ! PAYOFFS         [ reduce using rule 3 (input -> input input .) ]
  ! MODULE          [ reduce using rule 3 (input -> input input .) ]

    input                          shift and go to state 3

state 4

    (4) input -> input PROPF . prop_form
    (60) prop_form -> . DCOL pf SEMICOLON

    DCOL            shift and go to state 9

    prop_form                      shift and go to state 8

state 5

    (5) input -> input PAYOFFS . payoff_list
    (6) payoff_list -> . payoff_tuple
    (7) payoff_list -> . payoff_list payoff_tuple
    (8) payoff_tuple -> . DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON
    (9) payoff_tuple -> . DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON

    DCOL            shift and go to state 12

    payoff_list                    shift and go to state 10
    payoff_tuple                   shift and go to state 11

state 6

    (1) input -> MODULE NAME . CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form

    CONTROL         shift and go to state 13


state 7

    (2) input -> MODULE ENVIRONMENT . CONTROL var_y INIT init_y UPDATE update_y

    CONTROL         shift and go to state 14


state 8

    (4) input -> input PROPF prop_form .

    PROPF           reduce using rule 4 (input -> input PROPF prop_form .)
    PAYOFFS         reduce using rule 4 (input -> input PROPF prop_form .)
    MODULE          reduce using rule 4 (input -> input PROPF prop_form .)
    $end            reduce using rule 4 (input -> input PROPF prop_form .)


state 9

    (60) prop_form -> DCOL . pf SEMICOLON
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 15

state 10

    (5) input -> input PAYOFFS payoff_list .
    (7) payoff_list -> payoff_list . payoff_tuple
    (8) payoff_tuple -> . DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON
    (9) payoff_tuple -> . DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON

    PROPF           reduce using rule 5 (input -> input PAYOFFS payoff_list .)
    PAYOFFS         reduce using rule 5 (input -> input PAYOFFS payoff_list .)
    MODULE          reduce using rule 5 (input -> input PAYOFFS payoff_list .)
    $end            reduce using rule 5 (input -> input PAYOFFS payoff_list .)
    DCOL            shift and go to state 12

    payoff_tuple                   shift and go to state 24

state 11

    (6) payoff_list -> payoff_tuple .

    DCOL            reduce using rule 6 (payoff_list -> payoff_tuple .)
    PROPF           reduce using rule 6 (payoff_list -> payoff_tuple .)
    PAYOFFS         reduce using rule 6 (payoff_list -> payoff_tuple .)
    MODULE          reduce using rule 6 (payoff_list -> payoff_tuple .)
    $end            reduce using rule 6 (payoff_list -> payoff_tuple .)


state 12

    (8) payoff_tuple -> DCOL . LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON
    (9) payoff_tuple -> DCOL . LB error COMMA NAME COMMA NUMBER RB SEMICOLON

    LB              shift and go to state 25


state 13

    (1) input -> MODULE NAME CONTROL . var_y INIT init_y UPDATE update_y GOAL goal_form
    (10) var_y -> . NAME
    (11) var_y -> . var_y COMMA var_y

    NAME            shift and go to state 26

    var_y                          shift and go to state 27

state 14

    (2) input -> MODULE ENVIRONMENT CONTROL . var_y INIT init_y UPDATE update_y
    (10) var_y -> . NAME
    (11) var_y -> . var_y COMMA var_y

    NAME            shift and go to state 26

    var_y                          shift and go to state 28

state 15

    (60) prop_form -> DCOL pf . SEMICOLON
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    SEMICOLON       shift and go to state 29
    OR              shift and go to state 30
    AND             shift and go to state 31
    IMPLIES         shift and go to state 32
    IFF             shift and go to state 33
    U               shift and go to state 34


state 16

    (61) pf -> NAME .

    SEMICOLON       reduce using rule 61 (pf -> NAME .)
    OR              reduce using rule 61 (pf -> NAME .)
    AND             reduce using rule 61 (pf -> NAME .)
    IMPLIES         reduce using rule 61 (pf -> NAME .)
    IFF             reduce using rule 61 (pf -> NAME .)
    U               reduce using rule 61 (pf -> NAME .)
    RB              reduce using rule 61 (pf -> NAME .)


state 17

    (62) pf -> TRUE .

    SEMICOLON       reduce using rule 62 (pf -> TRUE .)
    OR              reduce using rule 62 (pf -> TRUE .)
    AND             reduce using rule 62 (pf -> TRUE .)
    IMPLIES         reduce using rule 62 (pf -> TRUE .)
    IFF             reduce using rule 62 (pf -> TRUE .)
    U               reduce using rule 62 (pf -> TRUE .)
    RB              reduce using rule 62 (pf -> TRUE .)


state 18

    (63) pf -> FALSE .

    SEMICOLON       reduce using rule 63 (pf -> FALSE .)
    OR              reduce using rule 63 (pf -> FALSE .)
    AND             reduce using rule 63 (pf -> FALSE .)
    IMPLIES         reduce using rule 63 (pf -> FALSE .)
    IFF             reduce using rule 63 (pf -> FALSE .)
    U               reduce using rule 63 (pf -> FALSE .)
    RB              reduce using rule 63 (pf -> FALSE .)


state 19

    (68) pf -> G . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 35

state 20

    (69) pf -> F . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 36

state 21

    (70) pf -> X . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 37

state 22

    (72) pf -> NOT . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 38

state 23

    (73) pf -> LB . pf RB
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 39

state 24

    (7) payoff_list -> payoff_list payoff_tuple .

    DCOL            reduce using rule 7 (payoff_list -> payoff_list payoff_tuple .)
    PROPF           reduce using rule 7 (payoff_list -> payoff_list payoff_tuple .)
    PAYOFFS         reduce using rule 7 (payoff_list -> payoff_list payoff_tuple .)
    MODULE          reduce using rule 7 (payoff_list -> payoff_list payoff_tuple .)
    $end            reduce using rule 7 (payoff_list -> payoff_list payoff_tuple .)


state 25

    (8) payoff_tuple -> DCOL LB . NAME COMMA NAME COMMA NUMBER RB SEMICOLON
    (9) payoff_tuple -> DCOL LB . error COMMA NAME COMMA NUMBER RB SEMICOLON

    NAME            shift and go to state 40
    error           shift and go to state 41


state 26

    (10) var_y -> NAME .

    INIT            reduce using rule 10 (var_y -> NAME .)
    COMMA           reduce using rule 10 (var_y -> NAME .)


state 27

    (1) input -> MODULE NAME CONTROL var_y . INIT init_y UPDATE update_y GOAL goal_form
    (11) var_y -> var_y . COMMA var_y

    INIT            shift and go to state 42
    COMMA           shift and go to state 43


state 28

    (2) input -> MODULE ENVIRONMENT CONTROL var_y . INIT init_y UPDATE update_y
    (11) var_y -> var_y . COMMA var_y

    INIT            shift and go to state 44
    COMMA           shift and go to state 43


state 29

    (60) prop_form -> DCOL pf SEMICOLON .

    PROPF           reduce using rule 60 (prop_form -> DCOL pf SEMICOLON .)
    PAYOFFS         reduce using rule 60 (prop_form -> DCOL pf SEMICOLON .)
    MODULE          reduce using rule 60 (prop_form -> DCOL pf SEMICOLON .)
    $end            reduce using rule 60 (prop_form -> DCOL pf SEMICOLON .)


state 30

    (64) pf -> pf OR . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 45

state 31

    (65) pf -> pf AND . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 46

state 32

    (66) pf -> pf IMPLIES . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 47

state 33

    (67) pf -> pf IFF . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 48

state 34

    (71) pf -> pf U . pf
    (61) pf -> . NAME
    (62) pf -> . TRUE
    (63) pf -> . FALSE
    (64) pf -> . pf OR pf
    (65) pf -> . pf AND pf
    (66) pf -> . pf IMPLIES pf
    (67) pf -> . pf IFF pf
    (68) pf -> . G pf
    (69) pf -> . F pf
    (70) pf -> . X pf
    (71) pf -> . pf U pf
    (72) pf -> . NOT pf
    (73) pf -> . LB pf RB

    NAME            shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    G               shift and go to state 19
    F               shift and go to state 20
    X               shift and go to state 21
    NOT             shift and go to state 22
    LB              shift and go to state 23

    pf                             shift and go to state 49

state 35

    (68) pf -> G pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 68 (pf -> G pf .)
    RB              reduce using rule 68 (pf -> G pf .)
    OR              shift and go to state 30
    AND             shift and go to state 31
    IMPLIES         shift and go to state 32
    IFF             shift and go to state 33
    U               shift and go to state 34

  ! OR              [ reduce using rule 68 (pf -> G pf .) ]
  ! AND             [ reduce using rule 68 (pf -> G pf .) ]
  ! IMPLIES         [ reduce using rule 68 (pf -> G pf .) ]
  ! IFF             [ reduce using rule 68 (pf -> G pf .) ]
  ! U               [ reduce using rule 68 (pf -> G pf .) ]


state 36

    (69) pf -> F pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 69 (pf -> F pf .)
    RB              reduce using rule 69 (pf -> F pf .)
    OR              shift and go to state 30
    AND             shift and go to state 31
    IMPLIES         shift and go to state 32
    IFF             shift and go to state 33
    U               shift and go to state 34

  ! OR              [ reduce using rule 69 (pf -> F pf .) ]
  ! AND             [ reduce using rule 69 (pf -> F pf .) ]
  ! IMPLIES         [ reduce using rule 69 (pf -> F pf .) ]
  ! IFF             [ reduce using rule 69 (pf -> F pf .) ]
  ! U               [ reduce using rule 69 (pf -> F pf .) ]


state 37

    (70) pf -> X pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 70 (pf -> X pf .)
    RB              reduce using rule 70 (pf -> X pf .)
    OR              shift and go to state 30
    AND             shift and go to state 31
    IMPLIES         shift and go to state 32
    IFF             shift and go to state 33
    U               shift and go to state 34

  ! OR              [ reduce using rule 70 (pf -> X pf .) ]
  ! AND             [ reduce using rule 70 (pf -> X pf .) ]
  ! IMPLIES         [ reduce using rule 70 (pf -> X pf .) ]
  ! IFF             [ reduce using rule 70 (pf -> X pf .) ]
  ! U               [ reduce using rule 70 (pf -> X pf .) ]


state 38

    (72) pf -> NOT pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    SEMICOLON       reduce using rule 72 (pf -> NOT pf .)
    OR              reduce using rule 72 (pf -> NOT pf .)
    AND             reduce using rule 72 (pf -> NOT pf .)
    IMPLIES         reduce using rule 72 (pf -> NOT pf .)
    IFF             reduce using rule 72 (pf -> NOT pf .)
    U               reduce using rule 72 (pf -> NOT pf .)
    RB              reduce using rule 72 (pf -> NOT pf .)

  ! OR              [ shift and go to state 30 ]
  ! AND             [ shift and go to state 31 ]
  ! IMPLIES         [ shift and go to state 32 ]
  ! IFF             [ shift and go to state 33 ]
  ! U               [ shift and go to state 34 ]


state 39

    (73) pf -> LB pf . RB
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    RB              shift and go to state 50
    OR              shift and go to state 30
    AND             shift and go to state 31
    IMPLIES         shift and go to state 32
    IFF             shift and go to state 33
    U               shift and go to state 34


state 40

    (8) payoff_tuple -> DCOL LB NAME . COMMA NAME COMMA NUMBER RB SEMICOLON

    COMMA           shift and go to state 51


state 41

    (9) payoff_tuple -> DCOL LB error . COMMA NAME COMMA NUMBER RB SEMICOLON

    COMMA           shift and go to state 52


state 42

    (1) input -> MODULE NAME CONTROL var_y INIT . init_y UPDATE update_y GOAL goal_form
    (12) init_y -> . DCOL init_command
    (13) init_y -> . init_y DCOL init_command

    DCOL            shift and go to state 54

    init_y                         shift and go to state 53

state 43

    (11) var_y -> var_y COMMA . var_y
    (10) var_y -> . NAME
    (11) var_y -> . var_y COMMA var_y

    NAME            shift and go to state 26

    var_y                          shift and go to state 55

state 44

    (2) input -> MODULE ENVIRONMENT CONTROL var_y INIT . init_y UPDATE update_y
    (12) init_y -> . DCOL init_command
    (13) init_y -> . init_y DCOL init_command

    DCOL            shift and go to state 54

    init_y                         shift and go to state 56

state 45

    (64) pf -> pf OR pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    SEMICOLON       reduce using rule 64 (pf -> pf OR pf .)
    OR              reduce using rule 64 (pf -> pf OR pf .)
    AND             reduce using rule 64 (pf -> pf OR pf .)
    IMPLIES         reduce using rule 64 (pf -> pf OR pf .)
    IFF             reduce using rule 64 (pf -> pf OR pf .)
    U               reduce using rule 64 (pf -> pf OR pf .)
    RB              reduce using rule 64 (pf -> pf OR pf .)

  ! OR              [ shift and go to state 30 ]
  ! AND             [ shift and go to state 31 ]
  ! IMPLIES         [ shift and go to state 32 ]
  ! IFF             [ shift and go to state 33 ]
  ! U               [ shift and go to state 34 ]


state 46

    (65) pf -> pf AND pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    SEMICOLON       reduce using rule 65 (pf -> pf AND pf .)
    OR              reduce using rule 65 (pf -> pf AND pf .)
    AND             reduce using rule 65 (pf -> pf AND pf .)
    IMPLIES         reduce using rule 65 (pf -> pf AND pf .)
    IFF             reduce using rule 65 (pf -> pf AND pf .)
    U               reduce using rule 65 (pf -> pf AND pf .)
    RB              reduce using rule 65 (pf -> pf AND pf .)

  ! OR              [ shift and go to state 30 ]
  ! AND             [ shift and go to state 31 ]
  ! IMPLIES         [ shift and go to state 32 ]
  ! IFF             [ shift and go to state 33 ]
  ! U               [ shift and go to state 34 ]


state 47

    (66) pf -> pf IMPLIES pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    SEMICOLON       reduce using rule 66 (pf -> pf IMPLIES pf .)
    IMPLIES         reduce using rule 66 (pf -> pf IMPLIES pf .)
    IFF             reduce using rule 66 (pf -> pf IMPLIES pf .)
    U               reduce using rule 66 (pf -> pf IMPLIES pf .)
    RB              reduce using rule 66 (pf -> pf IMPLIES pf .)
    OR              shift and go to state 30
    AND             shift and go to state 31

  ! OR              [ reduce using rule 66 (pf -> pf IMPLIES pf .) ]
  ! AND             [ reduce using rule 66 (pf -> pf IMPLIES pf .) ]
  ! IMPLIES         [ shift and go to state 32 ]
  ! IFF             [ shift and go to state 33 ]
  ! U               [ shift and go to state 34 ]


state 48

    (67) pf -> pf IFF pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

    SEMICOLON       reduce using rule 67 (pf -> pf IFF pf .)
    IMPLIES         reduce using rule 67 (pf -> pf IFF pf .)
    IFF             reduce using rule 67 (pf -> pf IFF pf .)
    U               reduce using rule 67 (pf -> pf IFF pf .)
    RB              reduce using rule 67 (pf -> pf IFF pf .)
    OR              shift and go to state 30
    AND             shift and go to state 31

  ! OR              [ reduce using rule 67 (pf -> pf IFF pf .) ]
  ! AND             [ reduce using rule 67 (pf -> pf IFF pf .) ]
  ! IMPLIES         [ shift and go to state 32 ]
  ! IFF             [ shift and go to state 33 ]
  ! U               [ shift and go to state 34 ]


state 49

    (71) pf -> pf U pf .
    (64) pf -> pf . OR pf
    (65) pf -> pf . AND pf
    (66) pf -> pf . IMPLIES pf
    (67) pf -> pf . IFF pf
    (71) pf -> pf . U pf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 71 (pf -> pf U pf .)
    RB              reduce using rule 71 (pf -> pf U pf .)
    OR              shift and go to state 30
    AND             shift and go to state 31
    IMPLIES         shift and go to state 32
    IFF             shift and go to state 33
    U               shift and go to state 34

  ! OR              [ reduce using rule 71 (pf -> pf U pf .) ]
  ! AND             [ reduce using rule 71 (pf -> pf U pf .) ]
  ! IMPLIES         [ reduce using rule 71 (pf -> pf U pf .) ]
  ! IFF             [ reduce using rule 71 (pf -> pf U pf .) ]
  ! U               [ reduce using rule 71 (pf -> pf U pf .) ]


state 50

    (73) pf -> LB pf RB .

    SEMICOLON       reduce using rule 73 (pf -> LB pf RB .)
    OR              reduce using rule 73 (pf -> LB pf RB .)
    AND             reduce using rule 73 (pf -> LB pf RB .)
    IMPLIES         reduce using rule 73 (pf -> LB pf RB .)
    IFF             reduce using rule 73 (pf -> LB pf RB .)
    U               reduce using rule 73 (pf -> LB pf RB .)
    RB              reduce using rule 73 (pf -> LB pf RB .)


state 51

    (8) payoff_tuple -> DCOL LB NAME COMMA . NAME COMMA NUMBER RB SEMICOLON

    NAME            shift and go to state 57


state 52

    (9) payoff_tuple -> DCOL LB error COMMA . NAME COMMA NUMBER RB SEMICOLON

    NAME            shift and go to state 58


state 53

    (1) input -> MODULE NAME CONTROL var_y INIT init_y . UPDATE update_y GOAL goal_form
    (13) init_y -> init_y . DCOL init_command

    UPDATE          shift and go to state 59
    DCOL            shift and go to state 60


state 54

    (12) init_y -> DCOL . init_command
    (14) init_command -> . init_condition ASSIGN init_next_state
    (15) init_condition -> . TRUE

    TRUE            shift and go to state 63

    init_command                   shift and go to state 61
    init_condition                 shift and go to state 62

state 55

    (11) var_y -> var_y COMMA var_y .
    (11) var_y -> var_y . COMMA var_y

  ! shift/reduce conflict for COMMA resolved as shift
    INIT            reduce using rule 11 (var_y -> var_y COMMA var_y .)
    COMMA           shift and go to state 43

  ! COMMA           [ reduce using rule 11 (var_y -> var_y COMMA var_y .) ]


state 56

    (2) input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y . UPDATE update_y
    (13) init_y -> init_y . DCOL init_command

    UPDATE          shift and go to state 64
    DCOL            shift and go to state 60


state 57

    (8) payoff_tuple -> DCOL LB NAME COMMA NAME . COMMA NUMBER RB SEMICOLON

    COMMA           shift and go to state 65


state 58

    (9) payoff_tuple -> DCOL LB error COMMA NAME . COMMA NUMBER RB SEMICOLON

    COMMA           shift and go to state 66


state 59

    (1) input -> MODULE NAME CONTROL var_y INIT init_y UPDATE . update_y GOAL goal_form
    (21) update_y -> . DCOL update_command
    (22) update_y -> . update_y DCOL update_command

    DCOL            shift and go to state 68

    update_y                       shift and go to state 67

state 60

    (13) init_y -> init_y DCOL . init_command
    (14) init_command -> . init_condition ASSIGN init_next_state
    (15) init_condition -> . TRUE

    TRUE            shift and go to state 63

    init_command                   shift and go to state 69
    init_condition                 shift and go to state 62

state 61

    (12) init_y -> DCOL init_command .

    UPDATE          reduce using rule 12 (init_y -> DCOL init_command .)
    DCOL            reduce using rule 12 (init_y -> DCOL init_command .)


state 62

    (14) init_command -> init_condition . ASSIGN init_next_state

    ASSIGN          shift and go to state 70


state 63

    (15) init_condition -> TRUE .

    ASSIGN          reduce using rule 15 (init_condition -> TRUE .)


state 64

    (2) input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE . update_y
    (21) update_y -> . DCOL update_command
    (22) update_y -> . update_y DCOL update_command

    DCOL            shift and go to state 68

    update_y                       shift and go to state 71

state 65

    (8) payoff_tuple -> DCOL LB NAME COMMA NAME COMMA . NUMBER RB SEMICOLON

    NUMBER          shift and go to state 72


state 66

    (9) payoff_tuple -> DCOL LB error COMMA NAME COMMA . NUMBER RB SEMICOLON

    NUMBER          shift and go to state 73


state 67

    (1) input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y . GOAL goal_form
    (22) update_y -> update_y . DCOL update_command

    GOAL            shift and go to state 74
    DCOL            shift and go to state 75


state 68

    (21) update_y -> DCOL . update_command
    (20) update_command -> . update_condition ASSIGN update_next_state
    (23) update_condition -> . formula_guard
    (24) update_condition -> . update_condition COMMA update_condition
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    update_command                 shift and go to state 76
    update_condition               shift and go to state 77
    formula_guard                  shift and go to state 78

state 69

    (13) init_y -> init_y DCOL init_command .

    UPDATE          reduce using rule 13 (init_y -> init_y DCOL init_command .)
    DCOL            reduce using rule 13 (init_y -> init_y DCOL init_command .)


state 70

    (14) init_command -> init_condition ASSIGN . init_next_state
    (16) init_next_state -> . NAME NEXT EQUALS TRUE
    (17) init_next_state -> . NAME NEXT EQUALS FALSE
    (18) init_next_state -> . init_next_state COMMA init_next_state
    (19) init_next_state -> . init_next_state SEMICOLON

    NAME            shift and go to state 85

    init_next_state                shift and go to state 84

state 71

    (2) input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y .
    (22) update_y -> update_y . DCOL update_command

    PROPF           reduce using rule 2 (input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y .)
    PAYOFFS         reduce using rule 2 (input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y .)
    MODULE          reduce using rule 2 (input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y .)
    $end            reduce using rule 2 (input -> MODULE ENVIRONMENT CONTROL var_y INIT init_y UPDATE update_y .)
    DCOL            shift and go to state 75


state 72

    (8) payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER . RB SEMICOLON

    RB              shift and go to state 86


state 73

    (9) payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER . RB SEMICOLON

    RB              shift and go to state 87


state 74

    (1) input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL . goal_form
    (46) goal_form -> . DCOL gf SEMICOLON

    DCOL            shift and go to state 89

    goal_form                      shift and go to state 88

state 75

    (22) update_y -> update_y DCOL . update_command
    (20) update_command -> . update_condition ASSIGN update_next_state
    (23) update_condition -> . formula_guard
    (24) update_condition -> . update_condition COMMA update_condition
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    update_command                 shift and go to state 90
    update_condition               shift and go to state 77
    formula_guard                  shift and go to state 78

state 76

    (21) update_y -> DCOL update_command .

    GOAL            reduce using rule 21 (update_y -> DCOL update_command .)
    DCOL            reduce using rule 21 (update_y -> DCOL update_command .)
    PROPF           reduce using rule 21 (update_y -> DCOL update_command .)
    PAYOFFS         reduce using rule 21 (update_y -> DCOL update_command .)
    MODULE          reduce using rule 21 (update_y -> DCOL update_command .)
    $end            reduce using rule 21 (update_y -> DCOL update_command .)


state 77

    (20) update_command -> update_condition . ASSIGN update_next_state
    (24) update_condition -> update_condition . COMMA update_condition

    ASSIGN          shift and go to state 91
    COMMA           shift and go to state 92


state 78

    (23) update_condition -> formula_guard .
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    ASSIGN          reduce using rule 23 (update_condition -> formula_guard .)
    COMMA           reduce using rule 23 (update_condition -> formula_guard .)
    OR              shift and go to state 93
    AND             shift and go to state 94
    IMPLIES         shift and go to state 95
    IFF             shift and go to state 96


state 79

    (25) formula_guard -> NAME .

    OR              reduce using rule 25 (formula_guard -> NAME .)
    AND             reduce using rule 25 (formula_guard -> NAME .)
    IMPLIES         reduce using rule 25 (formula_guard -> NAME .)
    IFF             reduce using rule 25 (formula_guard -> NAME .)
    ASSIGN          reduce using rule 25 (formula_guard -> NAME .)
    COMMA           reduce using rule 25 (formula_guard -> NAME .)
    RB              reduce using rule 25 (formula_guard -> NAME .)


state 80

    (26) formula_guard -> TRUE .

    OR              reduce using rule 26 (formula_guard -> TRUE .)
    AND             reduce using rule 26 (formula_guard -> TRUE .)
    IMPLIES         reduce using rule 26 (formula_guard -> TRUE .)
    IFF             reduce using rule 26 (formula_guard -> TRUE .)
    ASSIGN          reduce using rule 26 (formula_guard -> TRUE .)
    COMMA           reduce using rule 26 (formula_guard -> TRUE .)
    RB              reduce using rule 26 (formula_guard -> TRUE .)


state 81

    (27) formula_guard -> FALSE .

    OR              reduce using rule 27 (formula_guard -> FALSE .)
    AND             reduce using rule 27 (formula_guard -> FALSE .)
    IMPLIES         reduce using rule 27 (formula_guard -> FALSE .)
    IFF             reduce using rule 27 (formula_guard -> FALSE .)
    ASSIGN          reduce using rule 27 (formula_guard -> FALSE .)
    COMMA           reduce using rule 27 (formula_guard -> FALSE .)
    RB              reduce using rule 27 (formula_guard -> FALSE .)


state 82

    (32) formula_guard -> NOT . formula_guard
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    formula_guard                  shift and go to state 97

state 83

    (33) formula_guard -> LB . formula_guard RB
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    formula_guard                  shift and go to state 98

state 84

    (14) init_command -> init_condition ASSIGN init_next_state .
    (18) init_next_state -> init_next_state . COMMA init_next_state
    (19) init_next_state -> init_next_state . SEMICOLON

    UPDATE          reduce using rule 14 (init_command -> init_condition ASSIGN init_next_state .)
    DCOL            reduce using rule 14 (init_command -> init_condition ASSIGN init_next_state .)
    COMMA           shift and go to state 99
    SEMICOLON       shift and go to state 100


state 85

    (16) init_next_state -> NAME . NEXT EQUALS TRUE
    (17) init_next_state -> NAME . NEXT EQUALS FALSE

    NEXT            shift and go to state 101


state 86

    (8) payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB . SEMICOLON

    SEMICOLON       shift and go to state 102


state 87

    (9) payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB . SEMICOLON

    SEMICOLON       shift and go to state 103


state 88

    (1) input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .

    PROPF           reduce using rule 1 (input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .)
    PAYOFFS         reduce using rule 1 (input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .)
    MODULE          reduce using rule 1 (input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .)
    $end            reduce using rule 1 (input -> MODULE NAME CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .)


state 89

    (46) goal_form -> DCOL . gf SEMICOLON
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 104

state 90

    (22) update_y -> update_y DCOL update_command .

    GOAL            reduce using rule 22 (update_y -> update_y DCOL update_command .)
    DCOL            reduce using rule 22 (update_y -> update_y DCOL update_command .)
    PROPF           reduce using rule 22 (update_y -> update_y DCOL update_command .)
    PAYOFFS         reduce using rule 22 (update_y -> update_y DCOL update_command .)
    MODULE          reduce using rule 22 (update_y -> update_y DCOL update_command .)
    $end            reduce using rule 22 (update_y -> update_y DCOL update_command .)


state 91

    (20) update_command -> update_condition ASSIGN . update_next_state
    (34) update_next_state -> . NAME NEXT EQUALS formula_assign
    (35) update_next_state -> . update_next_state COMMA update_next_state
    (36) update_next_state -> . update_next_state SEMICOLON

    NAME            shift and go to state 114

    update_next_state              shift and go to state 113

state 92

    (24) update_condition -> update_condition COMMA . update_condition
    (23) update_condition -> . formula_guard
    (24) update_condition -> . update_condition COMMA update_condition
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    update_condition               shift and go to state 115
    formula_guard                  shift and go to state 78

state 93

    (28) formula_guard -> formula_guard OR . formula_guard
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    formula_guard                  shift and go to state 116

state 94

    (29) formula_guard -> formula_guard AND . formula_guard
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    formula_guard                  shift and go to state 117

state 95

    (30) formula_guard -> formula_guard IMPLIES . formula_guard
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    formula_guard                  shift and go to state 118

state 96

    (31) formula_guard -> formula_guard IFF . formula_guard
    (25) formula_guard -> . NAME
    (26) formula_guard -> . TRUE
    (27) formula_guard -> . FALSE
    (28) formula_guard -> . formula_guard OR formula_guard
    (29) formula_guard -> . formula_guard AND formula_guard
    (30) formula_guard -> . formula_guard IMPLIES formula_guard
    (31) formula_guard -> . formula_guard IFF formula_guard
    (32) formula_guard -> . NOT formula_guard
    (33) formula_guard -> . LB formula_guard RB

    NAME            shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NOT             shift and go to state 82
    LB              shift and go to state 83

    formula_guard                  shift and go to state 119

state 97

    (32) formula_guard -> NOT formula_guard .
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    OR              reduce using rule 32 (formula_guard -> NOT formula_guard .)
    AND             reduce using rule 32 (formula_guard -> NOT formula_guard .)
    IMPLIES         reduce using rule 32 (formula_guard -> NOT formula_guard .)
    IFF             reduce using rule 32 (formula_guard -> NOT formula_guard .)
    ASSIGN          reduce using rule 32 (formula_guard -> NOT formula_guard .)
    COMMA           reduce using rule 32 (formula_guard -> NOT formula_guard .)
    RB              reduce using rule 32 (formula_guard -> NOT formula_guard .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! IMPLIES         [ shift and go to state 95 ]
  ! IFF             [ shift and go to state 96 ]


state 98

    (33) formula_guard -> LB formula_guard . RB
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    RB              shift and go to state 120
    OR              shift and go to state 93
    AND             shift and go to state 94
    IMPLIES         shift and go to state 95
    IFF             shift and go to state 96


state 99

    (18) init_next_state -> init_next_state COMMA . init_next_state
    (16) init_next_state -> . NAME NEXT EQUALS TRUE
    (17) init_next_state -> . NAME NEXT EQUALS FALSE
    (18) init_next_state -> . init_next_state COMMA init_next_state
    (19) init_next_state -> . init_next_state SEMICOLON

    NAME            shift and go to state 85

    init_next_state                shift and go to state 121

state 100

    (19) init_next_state -> init_next_state SEMICOLON .

    COMMA           reduce using rule 19 (init_next_state -> init_next_state SEMICOLON .)
    SEMICOLON       reduce using rule 19 (init_next_state -> init_next_state SEMICOLON .)
    UPDATE          reduce using rule 19 (init_next_state -> init_next_state SEMICOLON .)
    DCOL            reduce using rule 19 (init_next_state -> init_next_state SEMICOLON .)


state 101

    (16) init_next_state -> NAME NEXT . EQUALS TRUE
    (17) init_next_state -> NAME NEXT . EQUALS FALSE

    EQUALS          shift and go to state 122


state 102

    (8) payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON .

    DCOL            reduce using rule 8 (payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON .)
    PROPF           reduce using rule 8 (payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON .)
    PAYOFFS         reduce using rule 8 (payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON .)
    MODULE          reduce using rule 8 (payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON .)
    $end            reduce using rule 8 (payoff_tuple -> DCOL LB NAME COMMA NAME COMMA NUMBER RB SEMICOLON .)


state 103

    (9) payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON .

    DCOL            reduce using rule 9 (payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON .)
    PROPF           reduce using rule 9 (payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON .)
    PAYOFFS         reduce using rule 9 (payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON .)
    MODULE          reduce using rule 9 (payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON .)
    $end            reduce using rule 9 (payoff_tuple -> DCOL LB error COMMA NAME COMMA NUMBER RB SEMICOLON .)


state 104

    (46) goal_form -> DCOL gf . SEMICOLON
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    SEMICOLON       shift and go to state 123
    OR              shift and go to state 124
    AND             shift and go to state 125
    IMPLIES         shift and go to state 126
    IFF             shift and go to state 127
    U               shift and go to state 128


state 105

    (47) gf -> NAME .

    SEMICOLON       reduce using rule 47 (gf -> NAME .)
    OR              reduce using rule 47 (gf -> NAME .)
    AND             reduce using rule 47 (gf -> NAME .)
    IMPLIES         reduce using rule 47 (gf -> NAME .)
    IFF             reduce using rule 47 (gf -> NAME .)
    U               reduce using rule 47 (gf -> NAME .)
    RB              reduce using rule 47 (gf -> NAME .)


state 106

    (48) gf -> TRUE .

    SEMICOLON       reduce using rule 48 (gf -> TRUE .)
    OR              reduce using rule 48 (gf -> TRUE .)
    AND             reduce using rule 48 (gf -> TRUE .)
    IMPLIES         reduce using rule 48 (gf -> TRUE .)
    IFF             reduce using rule 48 (gf -> TRUE .)
    U               reduce using rule 48 (gf -> TRUE .)
    RB              reduce using rule 48 (gf -> TRUE .)


state 107

    (49) gf -> FALSE .

    SEMICOLON       reduce using rule 49 (gf -> FALSE .)
    OR              reduce using rule 49 (gf -> FALSE .)
    AND             reduce using rule 49 (gf -> FALSE .)
    IMPLIES         reduce using rule 49 (gf -> FALSE .)
    IFF             reduce using rule 49 (gf -> FALSE .)
    U               reduce using rule 49 (gf -> FALSE .)
    RB              reduce using rule 49 (gf -> FALSE .)


state 108

    (54) gf -> G . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 129

state 109

    (55) gf -> F . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 130

state 110

    (56) gf -> X . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 131

state 111

    (58) gf -> NOT . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 132

state 112

    (59) gf -> LB . gf RB
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 133

state 113

    (20) update_command -> update_condition ASSIGN update_next_state .
    (35) update_next_state -> update_next_state . COMMA update_next_state
    (36) update_next_state -> update_next_state . SEMICOLON

    GOAL            reduce using rule 20 (update_command -> update_condition ASSIGN update_next_state .)
    DCOL            reduce using rule 20 (update_command -> update_condition ASSIGN update_next_state .)
    PROPF           reduce using rule 20 (update_command -> update_condition ASSIGN update_next_state .)
    PAYOFFS         reduce using rule 20 (update_command -> update_condition ASSIGN update_next_state .)
    MODULE          reduce using rule 20 (update_command -> update_condition ASSIGN update_next_state .)
    $end            reduce using rule 20 (update_command -> update_condition ASSIGN update_next_state .)
    COMMA           shift and go to state 134
    SEMICOLON       shift and go to state 135


state 114

    (34) update_next_state -> NAME . NEXT EQUALS formula_assign

    NEXT            shift and go to state 136


state 115

    (24) update_condition -> update_condition COMMA update_condition .
    (24) update_condition -> update_condition . COMMA update_condition

  ! shift/reduce conflict for COMMA resolved as shift
    ASSIGN          reduce using rule 24 (update_condition -> update_condition COMMA update_condition .)
    COMMA           shift and go to state 92

  ! COMMA           [ reduce using rule 24 (update_condition -> update_condition COMMA update_condition .) ]


state 116

    (28) formula_guard -> formula_guard OR formula_guard .
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    OR              reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)
    AND             reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)
    IMPLIES         reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)
    IFF             reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)
    ASSIGN          reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)
    COMMA           reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)
    RB              reduce using rule 28 (formula_guard -> formula_guard OR formula_guard .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! IMPLIES         [ shift and go to state 95 ]
  ! IFF             [ shift and go to state 96 ]


state 117

    (29) formula_guard -> formula_guard AND formula_guard .
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    OR              reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)
    AND             reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)
    IMPLIES         reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)
    IFF             reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)
    ASSIGN          reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)
    COMMA           reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)
    RB              reduce using rule 29 (formula_guard -> formula_guard AND formula_guard .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! IMPLIES         [ shift and go to state 95 ]
  ! IFF             [ shift and go to state 96 ]


state 118

    (30) formula_guard -> formula_guard IMPLIES formula_guard .
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    IMPLIES         reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .)
    IFF             reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .)
    ASSIGN          reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .)
    COMMA           reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .)
    RB              reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .)
    OR              shift and go to state 93
    AND             shift and go to state 94

  ! OR              [ reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .) ]
  ! AND             [ reduce using rule 30 (formula_guard -> formula_guard IMPLIES formula_guard .) ]
  ! IMPLIES         [ shift and go to state 95 ]
  ! IFF             [ shift and go to state 96 ]


state 119

    (31) formula_guard -> formula_guard IFF formula_guard .
    (28) formula_guard -> formula_guard . OR formula_guard
    (29) formula_guard -> formula_guard . AND formula_guard
    (30) formula_guard -> formula_guard . IMPLIES formula_guard
    (31) formula_guard -> formula_guard . IFF formula_guard

    IMPLIES         reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .)
    IFF             reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .)
    ASSIGN          reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .)
    COMMA           reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .)
    RB              reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .)
    OR              shift and go to state 93
    AND             shift and go to state 94

  ! OR              [ reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .) ]
  ! AND             [ reduce using rule 31 (formula_guard -> formula_guard IFF formula_guard .) ]
  ! IMPLIES         [ shift and go to state 95 ]
  ! IFF             [ shift and go to state 96 ]


state 120

    (33) formula_guard -> LB formula_guard RB .

    OR              reduce using rule 33 (formula_guard -> LB formula_guard RB .)
    AND             reduce using rule 33 (formula_guard -> LB formula_guard RB .)
    IMPLIES         reduce using rule 33 (formula_guard -> LB formula_guard RB .)
    IFF             reduce using rule 33 (formula_guard -> LB formula_guard RB .)
    ASSIGN          reduce using rule 33 (formula_guard -> LB formula_guard RB .)
    COMMA           reduce using rule 33 (formula_guard -> LB formula_guard RB .)
    RB              reduce using rule 33 (formula_guard -> LB formula_guard RB .)


state 121

    (18) init_next_state -> init_next_state COMMA init_next_state .
    (18) init_next_state -> init_next_state . COMMA init_next_state
    (19) init_next_state -> init_next_state . SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    UPDATE          reduce using rule 18 (init_next_state -> init_next_state COMMA init_next_state .)
    DCOL            reduce using rule 18 (init_next_state -> init_next_state COMMA init_next_state .)
    COMMA           shift and go to state 99
    SEMICOLON       shift and go to state 100

  ! COMMA           [ reduce using rule 18 (init_next_state -> init_next_state COMMA init_next_state .) ]
  ! SEMICOLON       [ reduce using rule 18 (init_next_state -> init_next_state COMMA init_next_state .) ]


state 122

    (16) init_next_state -> NAME NEXT EQUALS . TRUE
    (17) init_next_state -> NAME NEXT EQUALS . FALSE

    TRUE            shift and go to state 137
    FALSE           shift and go to state 138


state 123

    (46) goal_form -> DCOL gf SEMICOLON .

    PROPF           reduce using rule 46 (goal_form -> DCOL gf SEMICOLON .)
    PAYOFFS         reduce using rule 46 (goal_form -> DCOL gf SEMICOLON .)
    MODULE          reduce using rule 46 (goal_form -> DCOL gf SEMICOLON .)
    $end            reduce using rule 46 (goal_form -> DCOL gf SEMICOLON .)


state 124

    (50) gf -> gf OR . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 139

state 125

    (51) gf -> gf AND . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 140

state 126

    (52) gf -> gf IMPLIES . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 141

state 127

    (53) gf -> gf IFF . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 142

state 128

    (57) gf -> gf U . gf
    (47) gf -> . NAME
    (48) gf -> . TRUE
    (49) gf -> . FALSE
    (50) gf -> . gf OR gf
    (51) gf -> . gf AND gf
    (52) gf -> . gf IMPLIES gf
    (53) gf -> . gf IFF gf
    (54) gf -> . G gf
    (55) gf -> . F gf
    (56) gf -> . X gf
    (57) gf -> . gf U gf
    (58) gf -> . NOT gf
    (59) gf -> . LB gf RB

    NAME            shift and go to state 105
    TRUE            shift and go to state 106
    FALSE           shift and go to state 107
    G               shift and go to state 108
    F               shift and go to state 109
    X               shift and go to state 110
    NOT             shift and go to state 111
    LB              shift and go to state 112

    gf                             shift and go to state 143

state 129

    (54) gf -> G gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 54 (gf -> G gf .)
    RB              reduce using rule 54 (gf -> G gf .)
    OR              shift and go to state 124
    AND             shift and go to state 125
    IMPLIES         shift and go to state 126
    IFF             shift and go to state 127
    U               shift and go to state 128

  ! OR              [ reduce using rule 54 (gf -> G gf .) ]
  ! AND             [ reduce using rule 54 (gf -> G gf .) ]
  ! IMPLIES         [ reduce using rule 54 (gf -> G gf .) ]
  ! IFF             [ reduce using rule 54 (gf -> G gf .) ]
  ! U               [ reduce using rule 54 (gf -> G gf .) ]


state 130

    (55) gf -> F gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 55 (gf -> F gf .)
    RB              reduce using rule 55 (gf -> F gf .)
    OR              shift and go to state 124
    AND             shift and go to state 125
    IMPLIES         shift and go to state 126
    IFF             shift and go to state 127
    U               shift and go to state 128

  ! OR              [ reduce using rule 55 (gf -> F gf .) ]
  ! AND             [ reduce using rule 55 (gf -> F gf .) ]
  ! IMPLIES         [ reduce using rule 55 (gf -> F gf .) ]
  ! IFF             [ reduce using rule 55 (gf -> F gf .) ]
  ! U               [ reduce using rule 55 (gf -> F gf .) ]


state 131

    (56) gf -> X gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 56 (gf -> X gf .)
    RB              reduce using rule 56 (gf -> X gf .)
    OR              shift and go to state 124
    AND             shift and go to state 125
    IMPLIES         shift and go to state 126
    IFF             shift and go to state 127
    U               shift and go to state 128

  ! OR              [ reduce using rule 56 (gf -> X gf .) ]
  ! AND             [ reduce using rule 56 (gf -> X gf .) ]
  ! IMPLIES         [ reduce using rule 56 (gf -> X gf .) ]
  ! IFF             [ reduce using rule 56 (gf -> X gf .) ]
  ! U               [ reduce using rule 56 (gf -> X gf .) ]


state 132

    (58) gf -> NOT gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    SEMICOLON       reduce using rule 58 (gf -> NOT gf .)
    OR              reduce using rule 58 (gf -> NOT gf .)
    AND             reduce using rule 58 (gf -> NOT gf .)
    IMPLIES         reduce using rule 58 (gf -> NOT gf .)
    IFF             reduce using rule 58 (gf -> NOT gf .)
    U               reduce using rule 58 (gf -> NOT gf .)
    RB              reduce using rule 58 (gf -> NOT gf .)

  ! OR              [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! IMPLIES         [ shift and go to state 126 ]
  ! IFF             [ shift and go to state 127 ]
  ! U               [ shift and go to state 128 ]


state 133

    (59) gf -> LB gf . RB
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    RB              shift and go to state 144
    OR              shift and go to state 124
    AND             shift and go to state 125
    IMPLIES         shift and go to state 126
    IFF             shift and go to state 127
    U               shift and go to state 128


state 134

    (35) update_next_state -> update_next_state COMMA . update_next_state
    (34) update_next_state -> . NAME NEXT EQUALS formula_assign
    (35) update_next_state -> . update_next_state COMMA update_next_state
    (36) update_next_state -> . update_next_state SEMICOLON

    NAME            shift and go to state 114

    update_next_state              shift and go to state 145

state 135

    (36) update_next_state -> update_next_state SEMICOLON .

    COMMA           reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    SEMICOLON       reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    GOAL            reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    DCOL            reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    PROPF           reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    PAYOFFS         reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    MODULE          reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)
    $end            reduce using rule 36 (update_next_state -> update_next_state SEMICOLON .)


state 136

    (34) update_next_state -> NAME NEXT . EQUALS formula_assign

    EQUALS          shift and go to state 146


state 137

    (16) init_next_state -> NAME NEXT EQUALS TRUE .

    COMMA           reduce using rule 16 (init_next_state -> NAME NEXT EQUALS TRUE .)
    SEMICOLON       reduce using rule 16 (init_next_state -> NAME NEXT EQUALS TRUE .)
    UPDATE          reduce using rule 16 (init_next_state -> NAME NEXT EQUALS TRUE .)
    DCOL            reduce using rule 16 (init_next_state -> NAME NEXT EQUALS TRUE .)


state 138

    (17) init_next_state -> NAME NEXT EQUALS FALSE .

    COMMA           reduce using rule 17 (init_next_state -> NAME NEXT EQUALS FALSE .)
    SEMICOLON       reduce using rule 17 (init_next_state -> NAME NEXT EQUALS FALSE .)
    UPDATE          reduce using rule 17 (init_next_state -> NAME NEXT EQUALS FALSE .)
    DCOL            reduce using rule 17 (init_next_state -> NAME NEXT EQUALS FALSE .)


state 139

    (50) gf -> gf OR gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    SEMICOLON       reduce using rule 50 (gf -> gf OR gf .)
    OR              reduce using rule 50 (gf -> gf OR gf .)
    AND             reduce using rule 50 (gf -> gf OR gf .)
    IMPLIES         reduce using rule 50 (gf -> gf OR gf .)
    IFF             reduce using rule 50 (gf -> gf OR gf .)
    U               reduce using rule 50 (gf -> gf OR gf .)
    RB              reduce using rule 50 (gf -> gf OR gf .)

  ! OR              [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! IMPLIES         [ shift and go to state 126 ]
  ! IFF             [ shift and go to state 127 ]
  ! U               [ shift and go to state 128 ]


state 140

    (51) gf -> gf AND gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    SEMICOLON       reduce using rule 51 (gf -> gf AND gf .)
    OR              reduce using rule 51 (gf -> gf AND gf .)
    AND             reduce using rule 51 (gf -> gf AND gf .)
    IMPLIES         reduce using rule 51 (gf -> gf AND gf .)
    IFF             reduce using rule 51 (gf -> gf AND gf .)
    U               reduce using rule 51 (gf -> gf AND gf .)
    RB              reduce using rule 51 (gf -> gf AND gf .)

  ! OR              [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! IMPLIES         [ shift and go to state 126 ]
  ! IFF             [ shift and go to state 127 ]
  ! U               [ shift and go to state 128 ]


state 141

    (52) gf -> gf IMPLIES gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    SEMICOLON       reduce using rule 52 (gf -> gf IMPLIES gf .)
    IMPLIES         reduce using rule 52 (gf -> gf IMPLIES gf .)
    IFF             reduce using rule 52 (gf -> gf IMPLIES gf .)
    U               reduce using rule 52 (gf -> gf IMPLIES gf .)
    RB              reduce using rule 52 (gf -> gf IMPLIES gf .)
    OR              shift and go to state 124
    AND             shift and go to state 125

  ! OR              [ reduce using rule 52 (gf -> gf IMPLIES gf .) ]
  ! AND             [ reduce using rule 52 (gf -> gf IMPLIES gf .) ]
  ! IMPLIES         [ shift and go to state 126 ]
  ! IFF             [ shift and go to state 127 ]
  ! U               [ shift and go to state 128 ]


state 142

    (53) gf -> gf IFF gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

    SEMICOLON       reduce using rule 53 (gf -> gf IFF gf .)
    IMPLIES         reduce using rule 53 (gf -> gf IFF gf .)
    IFF             reduce using rule 53 (gf -> gf IFF gf .)
    U               reduce using rule 53 (gf -> gf IFF gf .)
    RB              reduce using rule 53 (gf -> gf IFF gf .)
    OR              shift and go to state 124
    AND             shift and go to state 125

  ! OR              [ reduce using rule 53 (gf -> gf IFF gf .) ]
  ! AND             [ reduce using rule 53 (gf -> gf IFF gf .) ]
  ! IMPLIES         [ shift and go to state 126 ]
  ! IFF             [ shift and go to state 127 ]
  ! U               [ shift and go to state 128 ]


state 143

    (57) gf -> gf U gf .
    (50) gf -> gf . OR gf
    (51) gf -> gf . AND gf
    (52) gf -> gf . IMPLIES gf
    (53) gf -> gf . IFF gf
    (57) gf -> gf . U gf

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for U resolved as shift
    SEMICOLON       reduce using rule 57 (gf -> gf U gf .)
    RB              reduce using rule 57 (gf -> gf U gf .)
    OR              shift and go to state 124
    AND             shift and go to state 125
    IMPLIES         shift and go to state 126
    IFF             shift and go to state 127
    U               shift and go to state 128

  ! OR              [ reduce using rule 57 (gf -> gf U gf .) ]
  ! AND             [ reduce using rule 57 (gf -> gf U gf .) ]
  ! IMPLIES         [ reduce using rule 57 (gf -> gf U gf .) ]
  ! IFF             [ reduce using rule 57 (gf -> gf U gf .) ]
  ! U               [ reduce using rule 57 (gf -> gf U gf .) ]


state 144

    (59) gf -> LB gf RB .

    SEMICOLON       reduce using rule 59 (gf -> LB gf RB .)
    OR              reduce using rule 59 (gf -> LB gf RB .)
    AND             reduce using rule 59 (gf -> LB gf RB .)
    IMPLIES         reduce using rule 59 (gf -> LB gf RB .)
    IFF             reduce using rule 59 (gf -> LB gf RB .)
    U               reduce using rule 59 (gf -> LB gf RB .)
    RB              reduce using rule 59 (gf -> LB gf RB .)


state 145

    (35) update_next_state -> update_next_state COMMA update_next_state .
    (35) update_next_state -> update_next_state . COMMA update_next_state
    (36) update_next_state -> update_next_state . SEMICOLON

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    GOAL            reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .)
    DCOL            reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .)
    PROPF           reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .)
    PAYOFFS         reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .)
    MODULE          reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .)
    $end            reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .)
    COMMA           shift and go to state 134
    SEMICOLON       shift and go to state 135

  ! COMMA           [ reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .) ]
  ! SEMICOLON       [ reduce using rule 35 (update_next_state -> update_next_state COMMA update_next_state .) ]


state 146

    (34) update_next_state -> NAME NEXT EQUALS . formula_assign
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 148

state 147

    (37) formula_assign -> NAME .

    OR              reduce using rule 37 (formula_assign -> NAME .)
    AND             reduce using rule 37 (formula_assign -> NAME .)
    IMPLIES         reduce using rule 37 (formula_assign -> NAME .)
    IFF             reduce using rule 37 (formula_assign -> NAME .)
    COMMA           reduce using rule 37 (formula_assign -> NAME .)
    SEMICOLON       reduce using rule 37 (formula_assign -> NAME .)
    GOAL            reduce using rule 37 (formula_assign -> NAME .)
    DCOL            reduce using rule 37 (formula_assign -> NAME .)
    PROPF           reduce using rule 37 (formula_assign -> NAME .)
    PAYOFFS         reduce using rule 37 (formula_assign -> NAME .)
    MODULE          reduce using rule 37 (formula_assign -> NAME .)
    $end            reduce using rule 37 (formula_assign -> NAME .)
    RB              reduce using rule 37 (formula_assign -> NAME .)


state 148

    (34) update_next_state -> NAME NEXT EQUALS formula_assign .
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    COMMA           reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    SEMICOLON       reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    GOAL            reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    DCOL            reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    PROPF           reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    PAYOFFS         reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    MODULE          reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    $end            reduce using rule 34 (update_next_state -> NAME NEXT EQUALS formula_assign .)
    OR              shift and go to state 153
    AND             shift and go to state 154
    IMPLIES         shift and go to state 155
    IFF             shift and go to state 156


state 149

    (38) formula_assign -> TRUE .

    OR              reduce using rule 38 (formula_assign -> TRUE .)
    AND             reduce using rule 38 (formula_assign -> TRUE .)
    IMPLIES         reduce using rule 38 (formula_assign -> TRUE .)
    IFF             reduce using rule 38 (formula_assign -> TRUE .)
    COMMA           reduce using rule 38 (formula_assign -> TRUE .)
    SEMICOLON       reduce using rule 38 (formula_assign -> TRUE .)
    GOAL            reduce using rule 38 (formula_assign -> TRUE .)
    DCOL            reduce using rule 38 (formula_assign -> TRUE .)
    PROPF           reduce using rule 38 (formula_assign -> TRUE .)
    PAYOFFS         reduce using rule 38 (formula_assign -> TRUE .)
    MODULE          reduce using rule 38 (formula_assign -> TRUE .)
    $end            reduce using rule 38 (formula_assign -> TRUE .)
    RB              reduce using rule 38 (formula_assign -> TRUE .)


state 150

    (39) formula_assign -> FALSE .

    OR              reduce using rule 39 (formula_assign -> FALSE .)
    AND             reduce using rule 39 (formula_assign -> FALSE .)
    IMPLIES         reduce using rule 39 (formula_assign -> FALSE .)
    IFF             reduce using rule 39 (formula_assign -> FALSE .)
    COMMA           reduce using rule 39 (formula_assign -> FALSE .)
    SEMICOLON       reduce using rule 39 (formula_assign -> FALSE .)
    GOAL            reduce using rule 39 (formula_assign -> FALSE .)
    DCOL            reduce using rule 39 (formula_assign -> FALSE .)
    PROPF           reduce using rule 39 (formula_assign -> FALSE .)
    PAYOFFS         reduce using rule 39 (formula_assign -> FALSE .)
    MODULE          reduce using rule 39 (formula_assign -> FALSE .)
    $end            reduce using rule 39 (formula_assign -> FALSE .)
    RB              reduce using rule 39 (formula_assign -> FALSE .)


state 151

    (44) formula_assign -> NOT . formula_assign
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 157

state 152

    (45) formula_assign -> LB . formula_assign RB
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 158

state 153

    (40) formula_assign -> formula_assign OR . formula_assign
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 159

state 154

    (41) formula_assign -> formula_assign AND . formula_assign
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 160

state 155

    (42) formula_assign -> formula_assign IMPLIES . formula_assign
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 161

state 156

    (43) formula_assign -> formula_assign IFF . formula_assign
    (37) formula_assign -> . NAME
    (38) formula_assign -> . TRUE
    (39) formula_assign -> . FALSE
    (40) formula_assign -> . formula_assign OR formula_assign
    (41) formula_assign -> . formula_assign AND formula_assign
    (42) formula_assign -> . formula_assign IMPLIES formula_assign
    (43) formula_assign -> . formula_assign IFF formula_assign
    (44) formula_assign -> . NOT formula_assign
    (45) formula_assign -> . LB formula_assign RB

    NAME            shift and go to state 147
    TRUE            shift and go to state 149
    FALSE           shift and go to state 150
    NOT             shift and go to state 151
    LB              shift and go to state 152

    formula_assign                 shift and go to state 162

state 157

    (44) formula_assign -> NOT formula_assign .
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    OR              reduce using rule 44 (formula_assign -> NOT formula_assign .)
    AND             reduce using rule 44 (formula_assign -> NOT formula_assign .)
    IMPLIES         reduce using rule 44 (formula_assign -> NOT formula_assign .)
    IFF             reduce using rule 44 (formula_assign -> NOT formula_assign .)
    COMMA           reduce using rule 44 (formula_assign -> NOT formula_assign .)
    SEMICOLON       reduce using rule 44 (formula_assign -> NOT formula_assign .)
    GOAL            reduce using rule 44 (formula_assign -> NOT formula_assign .)
    DCOL            reduce using rule 44 (formula_assign -> NOT formula_assign .)
    PROPF           reduce using rule 44 (formula_assign -> NOT formula_assign .)
    PAYOFFS         reduce using rule 44 (formula_assign -> NOT formula_assign .)
    MODULE          reduce using rule 44 (formula_assign -> NOT formula_assign .)
    $end            reduce using rule 44 (formula_assign -> NOT formula_assign .)
    RB              reduce using rule 44 (formula_assign -> NOT formula_assign .)

  ! OR              [ shift and go to state 153 ]
  ! AND             [ shift and go to state 154 ]
  ! IMPLIES         [ shift and go to state 155 ]
  ! IFF             [ shift and go to state 156 ]


state 158

    (45) formula_assign -> LB formula_assign . RB
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    RB              shift and go to state 163
    OR              shift and go to state 153
    AND             shift and go to state 154
    IMPLIES         shift and go to state 155
    IFF             shift and go to state 156


state 159

    (40) formula_assign -> formula_assign OR formula_assign .
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    OR              reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    AND             reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    IMPLIES         reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    IFF             reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    COMMA           reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    SEMICOLON       reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    GOAL            reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    DCOL            reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    PROPF           reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    PAYOFFS         reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    MODULE          reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    $end            reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)
    RB              reduce using rule 40 (formula_assign -> formula_assign OR formula_assign .)

  ! OR              [ shift and go to state 153 ]
  ! AND             [ shift and go to state 154 ]
  ! IMPLIES         [ shift and go to state 155 ]
  ! IFF             [ shift and go to state 156 ]


state 160

    (41) formula_assign -> formula_assign AND formula_assign .
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    OR              reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    AND             reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    IMPLIES         reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    IFF             reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    COMMA           reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    SEMICOLON       reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    GOAL            reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    DCOL            reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    PROPF           reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    PAYOFFS         reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    MODULE          reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    $end            reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)
    RB              reduce using rule 41 (formula_assign -> formula_assign AND formula_assign .)

  ! OR              [ shift and go to state 153 ]
  ! AND             [ shift and go to state 154 ]
  ! IMPLIES         [ shift and go to state 155 ]
  ! IFF             [ shift and go to state 156 ]


state 161

    (42) formula_assign -> formula_assign IMPLIES formula_assign .
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    IMPLIES         reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    IFF             reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    COMMA           reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    SEMICOLON       reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    GOAL            reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    DCOL            reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    PROPF           reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    PAYOFFS         reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    MODULE          reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    $end            reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    RB              reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .)
    OR              shift and go to state 153
    AND             shift and go to state 154

  ! OR              [ reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .) ]
  ! AND             [ reduce using rule 42 (formula_assign -> formula_assign IMPLIES formula_assign .) ]
  ! IMPLIES         [ shift and go to state 155 ]
  ! IFF             [ shift and go to state 156 ]


state 162

    (43) formula_assign -> formula_assign IFF formula_assign .
    (40) formula_assign -> formula_assign . OR formula_assign
    (41) formula_assign -> formula_assign . AND formula_assign
    (42) formula_assign -> formula_assign . IMPLIES formula_assign
    (43) formula_assign -> formula_assign . IFF formula_assign

    IMPLIES         reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    IFF             reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    COMMA           reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    SEMICOLON       reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    GOAL            reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    DCOL            reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    PROPF           reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    PAYOFFS         reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    MODULE          reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    $end            reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    RB              reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .)
    OR              shift and go to state 153
    AND             shift and go to state 154

  ! OR              [ reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .) ]
  ! AND             [ reduce using rule 43 (formula_assign -> formula_assign IFF formula_assign .) ]
  ! IMPLIES         [ shift and go to state 155 ]
  ! IFF             [ shift and go to state 156 ]


state 163

    (45) formula_assign -> LB formula_assign RB .

    OR              reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    AND             reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    IMPLIES         reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    IFF             reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    COMMA           reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    SEMICOLON       reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    GOAL            reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    DCOL            reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    PROPF           reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    PAYOFFS         reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    MODULE          reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    $end            reduce using rule 45 (formula_assign -> LB formula_assign RB .)
    RB              reduce using rule 45 (formula_assign -> LB formula_assign RB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROPF in state 3 resolved as shift
WARNING: shift/reduce conflict for PAYOFFS in state 3 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 3 resolved as shift
WARNING: shift/reduce conflict for OR in state 35 resolved as shift
WARNING: shift/reduce conflict for AND in state 35 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 35 resolved as shift
WARNING: shift/reduce conflict for IFF in state 35 resolved as shift
WARNING: shift/reduce conflict for U in state 35 resolved as shift
WARNING: shift/reduce conflict for OR in state 36 resolved as shift
WARNING: shift/reduce conflict for AND in state 36 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 36 resolved as shift
WARNING: shift/reduce conflict for IFF in state 36 resolved as shift
WARNING: shift/reduce conflict for U in state 36 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 37 resolved as shift
WARNING: shift/reduce conflict for IFF in state 37 resolved as shift
WARNING: shift/reduce conflict for U in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 49 resolved as shift
WARNING: shift/reduce conflict for IFF in state 49 resolved as shift
WARNING: shift/reduce conflict for U in state 49 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 55 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 115 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 121 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 129 resolved as shift
WARNING: shift/reduce conflict for AND in state 129 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 129 resolved as shift
WARNING: shift/reduce conflict for IFF in state 129 resolved as shift
WARNING: shift/reduce conflict for U in state 129 resolved as shift
WARNING: shift/reduce conflict for OR in state 130 resolved as shift
WARNING: shift/reduce conflict for AND in state 130 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 130 resolved as shift
WARNING: shift/reduce conflict for IFF in state 130 resolved as shift
WARNING: shift/reduce conflict for U in state 130 resolved as shift
WARNING: shift/reduce conflict for OR in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 131 resolved as shift
WARNING: shift/reduce conflict for IFF in state 131 resolved as shift
WARNING: shift/reduce conflict for U in state 131 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 143 resolved as shift
WARNING: shift/reduce conflict for IFF in state 143 resolved as shift
WARNING: shift/reduce conflict for U in state 143 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 145 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 145 resolved as shift
